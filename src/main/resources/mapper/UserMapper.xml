<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inet.code.mapper.UserMapper">

    <!--登录操作-->
    <select id="getLogin" resultType="com.inet.code.entity.user.dto.UserBaseDomain">
        SELECT
            users.user_buddha AS userBuddha,
            users.user_name AS userName,
            users.user_email AS userEmail,
            users.user_sex AS userSex,
            users.user_birthday AS userBirthday,
            users.user_city AS userCity,
            users.user_signature AS userSignature,
            role.role_name AS roleName
        FROM
            tbl_user AS users
            LEFT JOIN tbl_power AS power ON users.user_email = power.power_email
            LEFT JOIN tbl_role AS role ON role.role_uuid = power.power_role
            LEFT JOIN tbl_cipher AS cipher ON cipher.cipher_email = users.user_email
        WHERE cipher.cipher_email = #{account} AND cipher_password = #{password};
    </select>

    <!--查找该邮箱的用户-->
    <select id="getByEmail" resultType="com.inet.code.entity.user.po.User">
        SELECT
            user.user_uuid AS userUuid,
            user.user_buddha AS userBuddha,
            user.user_name AS userName,
            user.user_email AS userEmail,
            user.user_sex AS userSex,
            user.user_birthday AS userBirthday,
            user.user_city AS userCity,
            user.user_signature AS userSignature,
            user.gmt_create AS gmtCreate,
            user.gmt_modified AS gmtModified
        FROM
            tbl_user AS user
        WHERE
            user.user_email = #{email}
        LIMIT 1;
    </select>
    <!--查看自己的粉丝-->
    <select id="getCheckFocus" resultType="com.inet.code.entity.user.vo.UserFanView">
        SELECT
            users.user_email AS userEmail,
            users.user_name AS userName,
            users.user_buddha AS userBuddha,
            aa.is_friend AS is_friend
        FROM
            (
                SELECT
                    a.email,
                    a.concern,
                IF
                    ( sum(1) over (partition by feature) > 1, 1 , 0 ) AS is_friend
                FROM
                    (
                        SELECT
                            attention_email AS email,
                            attention_concern AS concern,
                            IF(attention1.attention_email > attention1.attention_concern,
                                 CONCAT(attention1.attention_concern , attention1.attention_email),
                                 CONCAT(attention1.attention_email , attention1.attention_concern)
                            ) AS feature
                        FROM tbl_attention AS attention1
                    ) AS a
            ) AS aa
        LEFT JOIN tbl_user AS users ON users.user_email = aa.concern
        WHERE
            aa.email = #{userEmail}
        LIMIT #{pages},20;
    </select>
    <!--查看关注的人的条目数-->
    <select id="getCheckFocusTotal" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            (
                SELECT
                    a.email,
                    a.concern,
                IF
                    ( sum(1) over (partition by feature) > 1, 0 , 1 ) AS is_friend
                FROM
                    (
                        SELECT
                            attention_email AS email,
                            attention_concern AS concern,
                            IF(attention1.attention_email > attention1.attention_concern,
                                 CONCAT(attention1.attention_concern , attention1.attention_email),
                                 CONCAT(attention1.attention_email , attention1.attention_concern)
                            ) AS feature
                        FROM tbl_attention AS attention1
                    ) AS a
            ) AS aa
        LEFT JOIN tbl_user AS users ON users.user_email = aa.concern
        WHERE
            aa.email = #{userEmail} ;
    </select>
    <!--查看关注自己的用户-->
    <select id="getCheckFans" resultType="com.inet.code.entity.user.vo.UserFanView">
        SELECT
            users.user_email AS userEmail,
            users.user_name AS userName,
            users.user_buddha AS userBuddha,
            aa.is_friend AS is_friend
        FROM
            (
                SELECT
                    a.email,
                    a.concern,
                IF
                    ( sum(1) over (partition by feature) > 1, 0 , 1 ) AS is_friend
                FROM
                    (
                        SELECT
                            attention_email AS email,
                            attention_concern AS concern,
                            IF(attention1.attention_concern > attention1.attention_email,
                                 CONCAT(attention1.attention_concern , attention1.attention_email),
                                 CONCAT(attention1.attention_email , attention1.attention_concern)
                            ) AS feature
                        FROM tbl_attention AS attention1
                    ) AS a
            ) AS aa
        LEFT JOIN tbl_user AS users ON users.user_email = aa.email
        WHERE
            aa.concern = #{userEmail}
        LIMIT #{pages},20;
    </select>
    <!--查看关注自己的用户的条目数-->
    <select id="getCheckFansTotal" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            (
                SELECT
                    a.email,
                    a.concern,
                IF
                    ( sum(1) over (partition by feature) > 1, 0 , 1 ) AS is_friend
                FROM
                    (
                        SELECT
                            attention_email AS email,
                            attention_concern AS concern,
                            IF(attention1.attention_concern > attention1.attention_email,
                                 CONCAT(attention1.attention_email , attention1.attention_concern),
                                 CONCAT(attention1.attention_concern , attention1.attention_email)
                            ) AS feature
                        FROM tbl_attention AS attention1
                    ) AS a
            ) AS aa
        LEFT JOIN tbl_user AS users ON users.user_email = aa.email
        WHERE
            aa.concern = #{userEmail};
    </select>
    <!--通过邮箱继续登陆操作-->
    <select id="getByRoleEmail" resultType="com.inet.code.entity.user.dto.UserBaseDomain">
        SELECT
            users.user_buddha AS userBuddha,
            users.user_name AS userName,
            users.user_email AS userEmail,
            users.user_sex AS userSex,
            users.user_birthday AS userBirthday,
            users.user_city AS userCity,
            users.user_signature AS userSignature,
            role.role_name AS roleName
        FROM
            tbl_user AS users
            LEFT JOIN tbl_power AS power ON power.power_email = users.user_email
            LEFT JOIN tbl_role AS role ON role.role_uuid = power.power_role
        WHERE users.user_email = #{email};
    </select>

    <!--该日期新增多少人数-->
    <select id="getNewUsers" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            tbl_user
        WHERE
            gmt_create LIKE #{day};
    </select>

    <!--查看点赞数最高的五个用户-->
    <select id="getListFiveUsers" resultType="com.inet.code.entity.user.vo.UserFiveLikeView">
        SELECT
            users.user_uuid AS userUuid,
            users.user_buddha AS userBuddha,
            users.user_name AS userName,
            (
                SELECT
                    COUNT(*)
                FROM
                    tbl_assist AS assists
                        LEFT JOIN tbl_production AS production ON assists.assist_production_id = production.production_uuid
                WHERE
                    production.production_user_email = users.user_email
            ) AS likeTotal
        FROM
            tbl_user AS users
                LEFT JOIN tbl_power AS powers ON powers.power_email = users.user_email
                LEFT JOIN tbl_role AS role ON role.role_uuid = powers.power_role
        WHERE role.role_name = "member"
        ORDER BY likeTotal DESC , users.gmt_create DESC
        LIMIT 5;
    </select>
    <select id="getListTenUser" resultType="com.inet.code.entity.user.vo.UserFiveLikeView">
        SELECT
            users.user_uuid AS userUuid,
            users.user_buddha AS userBuddha,
            users.user_name AS userName,
            (
                SELECT
                    COUNT(*)
                FROM
                    tbl_assist AS assists
                        LEFT JOIN tbl_production AS production ON assists.assist_production_id = production.production_uuid
                WHERE
                    production.production_user_email = users.user_email
            ) AS likeTotal
        FROM
            tbl_user AS users
                LEFT JOIN tbl_power AS powers ON powers.power_email = users.user_email
                LEFT JOIN tbl_role AS role ON role.role_uuid = powers.power_role
        WHERE role.role_name = "member"
        ORDER BY likeTotal DESC , users.gmt_create DESC
            LIMIT 10;
    </select>

    <select id="getPage" resultType="com.inet.code.entity.user.po.User">
        SELECT
            users.user_uuid AS userUuid,
            users.user_buddha AS userBuddha,
            users.user_name AS userName,
            users.user_email AS userEmail,
            users.user_sex AS userSex,
            users.user_birthday AS userBirthday,
            users.user_city AS userCity,
            users.user_signature AS userSignature,
            users.gmt_create AS gmtCreate,
            users.gmt_modified AS gmtModified
        FROM
            tbl_user AS users
                LEFT JOIN tbl_power AS power ON power.power_email = users.user_email
                LEFT JOIN tbl_role AS role ON role.role_uuid = power.power_role
        WHERE role.role_name = "member"
    </select>

</mapper>
